/*
 * This file is part of the HSTracker package.
 * (c) Benjamin Michotte <bmichotte@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * Created on 14/02/16.
 */
#import "GameTag.h"

@implementation GameTag

+ (BOOL)tryParse:(NSString *)rawValue out:(EGameTag *)out
{
  if ([rawValue isEqualToString:@"IGNORE_DAMAGE"]) {*out = EGameTag_IGNORE_DAMAGE;}
  else if ([rawValue isEqualToString:@"TAG_SCRIPT_DATA_NUM_1"]) {*out = EGameTag_TAG_SCRIPT_DATA_NUM_1;}
  else if ([rawValue isEqualToString:@"TAG_SCRIPT_DATA_NUM_2"]) {*out = EGameTag_TAG_SCRIPT_DATA_NUM_2;}
  else if ([rawValue isEqualToString:@"TAG_SCRIPT_DATA_ENT_1"]) {*out = EGameTag_TAG_SCRIPT_DATA_ENT_1;}
  else if ([rawValue isEqualToString:@"TAG_SCRIPT_DATA_ENT_2"]) {*out = EGameTag_TAG_SCRIPT_DATA_ENT_2;}
  else if ([rawValue isEqualToString:@"MISSION_EVENT"]) {*out = EGameTag_MISSION_EVENT;}
  else if ([rawValue isEqualToString:@"TIMEOUT"]) {*out = EGameTag_TIMEOUT;}
  else if ([rawValue isEqualToString:@"TURN_START"]) {*out = EGameTag_TURN_START;}
  else if ([rawValue isEqualToString:@"TURN_TIMER_SLUSH"]) {*out = EGameTag_TURN_TIMER_SLUSH;}
  else if ([rawValue isEqualToString:@"PREMIUM"]) {*out = EGameTag_PREMIUM;}
  else if ([rawValue isEqualToString:@"GOLD_REWARD_STATE"]) {*out = EGameTag_GOLD_REWARD_STATE;}
  else if ([rawValue isEqualToString:@"PLAYSTATE"]) {*out = EGameTag_PLAYSTATE;}
  else if ([rawValue isEqualToString:@"LAST_AFFECTED_BY"]) {*out = EGameTag_LAST_AFFECTED_BY;}
  else if ([rawValue isEqualToString:@"STEP"]) {*out = EGameTag_STEP;}
  else if ([rawValue isEqualToString:@"TURN"]) {*out = EGameTag_TURN;}
  else if ([rawValue isEqualToString:@"FATIGUE"]) {*out = EGameTag_FATIGUE;}
  else if ([rawValue isEqualToString:@"CURRENT_PLAYER"]) {*out = EGameTag_CURRENT_PLAYER;}
  else if ([rawValue isEqualToString:@"FIRST_PLAYER"]) {*out = EGameTag_FIRST_PLAYER;}
  else if ([rawValue isEqualToString:@"RESOURCES_USED"]) {*out = EGameTag_RESOURCES_USED;}
  else if ([rawValue isEqualToString:@"RESOURCES"]) {*out = EGameTag_RESOURCES;}
  else if ([rawValue isEqualToString:@"HERO_ENTITY"]) {*out = EGameTag_HERO_ENTITY;}
  else if ([rawValue isEqualToString:@"MAXHANDSIZE"]) {*out = EGameTag_MAXHANDSIZE;}
  else if ([rawValue isEqualToString:@"STARTHANDSIZE"]) {*out = EGameTag_STARTHANDSIZE;}
  else if ([rawValue isEqualToString:@"PLAYER_ID"]) {*out = EGameTag_PLAYER_ID;}
  else if ([rawValue isEqualToString:@"TEAM_ID"]) {*out = EGameTag_TEAM_ID;}
  else if ([rawValue isEqualToString:@"TRIGGER_VISUAL"]) {*out = EGameTag_TRIGGER_VISUAL;}
  else if ([rawValue isEqualToString:@"RECENTLY_ARRIVED"]) {*out = EGameTag_RECENTLY_ARRIVED;}
  else if ([rawValue isEqualToString:@"PROTECTED"]) {*out = EGameTag_PROTECTED;}
  else if ([rawValue isEqualToString:@"PROTECTING"]) {*out = EGameTag_PROTECTING;}
  else if ([rawValue isEqualToString:@"DEFENDING"]) {*out = EGameTag_DEFENDING;}
  else if ([rawValue isEqualToString:@"PROPOSED_DEFENDER"]) {*out = EGameTag_PROPOSED_DEFENDER;}
  else if ([rawValue isEqualToString:@"ATTACKING"]) {*out = EGameTag_ATTACKING;}
  else if ([rawValue isEqualToString:@"PROPOSED_ATTACKER"]) {*out = EGameTag_PROPOSED_ATTACKER;}
  else if ([rawValue isEqualToString:@"ATTACHED"]) {*out = EGameTag_ATTACHED;}
  else if ([rawValue isEqualToString:@"EXHAUSTED"]) {*out = EGameTag_EXHAUSTED;}
  else if ([rawValue isEqualToString:@"DAMAGE"]) {*out = EGameTag_DAMAGE;}
  else if ([rawValue isEqualToString:@"HEALTH"]) {*out = EGameTag_HEALTH;}
  else if ([rawValue isEqualToString:@"ATK"]) {*out = EGameTag_ATK;}
  else if ([rawValue isEqualToString:@"COST"]) {*out = EGameTag_COST;}
  else if ([rawValue isEqualToString:@"ZONE"]) {*out = EGameTag_ZONE;}
  else if ([rawValue isEqualToString:@"CONTROLLER"]) {*out = EGameTag_CONTROLLER;}
  else if ([rawValue isEqualToString:@"OWNER"]) {*out = EGameTag_OWNER;}
  else if ([rawValue isEqualToString:@"DEFINITION"]) {*out = EGameTag_DEFINITION;}
  else if ([rawValue isEqualToString:@"ENTITY_ID"]) {*out = EGameTag_ENTITY_ID;}
  else if ([rawValue isEqualToString:@"HISTORY_PROXY"]) {*out = EGameTag_HISTORY_PROXY;}
  else if ([rawValue isEqualToString:@"COPY_DEATHRATTLE"]) {*out = EGameTag_COPY_DEATHRATTLE;}
  else if ([rawValue isEqualToString:@"COPY_DEATHRATTLE_INDEX"]) {*out = EGameTag_COPY_DEATHRATTLE_INDEX;}
  else if ([rawValue isEqualToString:@"ELITE"]) {*out = EGameTag_ELITE;}
  else if ([rawValue isEqualToString:@"MAXRESOURCES"]) {*out = EGameTag_MAXRESOURCES;}
  else if ([rawValue isEqualToString:@"CARD_SET"]) {*out = EGameTag_CARD_SET;}
  else if ([rawValue isEqualToString:@"CARDTEXT_INHAND"]) {*out = EGameTag_CARDTEXT_INHAND;}
  else if ([rawValue isEqualToString:@"CARDNAME"]) {*out = EGameTag_CARDNAME;}
  else if ([rawValue isEqualToString:@"CARD_ID"]) {*out = EGameTag_CARD_ID;}
  else if ([rawValue isEqualToString:@"DURABILITY"]) {*out = EGameTag_DURABILITY;}
  else if ([rawValue isEqualToString:@"SILENCED"]) {*out = EGameTag_SILENCED;}
  else if ([rawValue isEqualToString:@"WINDFURY"]) {*out = EGameTag_WINDFURY;}
  else if ([rawValue isEqualToString:@"TAUNT"]) {*out = EGameTag_TAUNT;}
  else if ([rawValue isEqualToString:@"STEALTH"]) {*out = EGameTag_STEALTH;}
  else if ([rawValue isEqualToString:@"SPELLPOWER"]) {*out = EGameTag_SPELLPOWER;}
  else if ([rawValue isEqualToString:@"DIVINE_SHIELD"]) {*out = EGameTag_DIVINE_SHIELD;}
  else if ([rawValue isEqualToString:@"CHARGE"]) {*out = EGameTag_CHARGE;}
  else if ([rawValue isEqualToString:@"NEXT_STEP"]) {*out = EGameTag_NEXT_STEP;}
  else if ([rawValue isEqualToString:@"CLASS"]) {*out = EGameTag_CLASS;}
  else if ([rawValue isEqualToString:@"CARDRACE"]) {*out = EGameTag_CARDRACE;}
  else if ([rawValue isEqualToString:@"FACTION"]) {*out = EGameTag_FACTION;}
  else if ([rawValue isEqualToString:@"CARDTYPE"]) {*out = EGameTag_CARDTYPE;}
  else if ([rawValue isEqualToString:@"RARITY"]) {*out = EGameTag_RARITY;}
  else if ([rawValue isEqualToString:@"STATE"]) {*out = EGameTag_STATE;}
  else if ([rawValue isEqualToString:@"SUMMONED"]) {*out = EGameTag_SUMMONED;}
  else if ([rawValue isEqualToString:@"FREEZE"]) {*out = EGameTag_FREEZE;}
  else if ([rawValue isEqualToString:@"ENRAGED"]) {*out = EGameTag_ENRAGED;}
  else if ([rawValue isEqualToString:@"OVERLOAD"]) {*out = EGameTag_OVERLOAD;}
  else if ([rawValue isEqualToString:@"LOYALTY"]) {*out = EGameTag_LOYALTY;}
  else if ([rawValue isEqualToString:@"DEATHRATTLE"]) {*out = EGameTag_DEATHRATTLE;}
  else if ([rawValue isEqualToString:@"BATTLECRY"]) {*out = EGameTag_BATTLECRY;}
  else if ([rawValue isEqualToString:@"SECRET"]) {*out = EGameTag_SECRET;}
  else if ([rawValue isEqualToString:@"COMBO"]) {*out = EGameTag_COMBO;}
  else if ([rawValue isEqualToString:@"CANT_HEAL"]) {*out = EGameTag_CANT_HEAL;}
  else if ([rawValue isEqualToString:@"CANT_DAMAGE"]) {*out = EGameTag_CANT_DAMAGE;}
  else if ([rawValue isEqualToString:@"CANT_SET_ASIDE"]) {*out = EGameTag_CANT_SET_ASIDE;}
  else if ([rawValue isEqualToString:@"CANT_REMOVE_FROM_GAME"]) {*out = EGameTag_CANT_REMOVE_FROM_GAME;}
  else if ([rawValue isEqualToString:@"CANT_READY"]) {*out = EGameTag_CANT_READY;}
  else if ([rawValue isEqualToString:@"CANT_EXHAUST"]) {*out = EGameTag_CANT_EXHAUST;}
  else if ([rawValue isEqualToString:@"CANT_ATTACK"]) {*out = EGameTag_CANT_ATTACK;}
  else if ([rawValue isEqualToString:@"CANT_TARGET"]) {*out = EGameTag_CANT_TARGET;}
  else if ([rawValue isEqualToString:@"CANT_DESTROY"]) {*out = EGameTag_CANT_DESTROY;}
  else if ([rawValue isEqualToString:@"CANT_DISCARD"]) {*out = EGameTag_CANT_DISCARD;}
  else if ([rawValue isEqualToString:@"CANT_PLAY"]) {*out = EGameTag_CANT_PLAY;}
  else if ([rawValue isEqualToString:@"CANT_DRAW"]) {*out = EGameTag_CANT_DRAW;}
  else if ([rawValue isEqualToString:@"INCOMING_HEALING_MULTIPLIER"]) {*out = EGameTag_INCOMING_HEALING_MULTIPLIER;}
  else if ([rawValue isEqualToString:@"INCOMING_HEALING_ADJUSTMENT"]) {*out = EGameTag_INCOMING_HEALING_ADJUSTMENT;}
  else if ([rawValue isEqualToString:@"INCOMING_HEALING_CAP"]) {*out = EGameTag_INCOMING_HEALING_CAP;}
  else if ([rawValue isEqualToString:@"INCOMING_DAMAGE_MULTIPLIER"]) {*out = EGameTag_INCOMING_DAMAGE_MULTIPLIER;}
  else if ([rawValue isEqualToString:@"INCOMING_DAMAGE_ADJUSTMENT"]) {*out = EGameTag_INCOMING_DAMAGE_ADJUSTMENT;}
  else if ([rawValue isEqualToString:@"INCOMING_DAMAGE_CAP"]) {*out = EGameTag_INCOMING_DAMAGE_CAP;}
  else if ([rawValue isEqualToString:@"CANT_BE_HEALED"]) {*out = EGameTag_CANT_BE_HEALED;}
  else if ([rawValue isEqualToString:@"CANT_BE_DAMAGED"]) {*out = EGameTag_CANT_BE_DAMAGED;}
  else if ([rawValue isEqualToString:@"CANT_BE_SET_ASIDE"]) {*out = EGameTag_CANT_BE_SET_ASIDE;}
  else if ([rawValue isEqualToString:@"CANT_BE_REMOVED_FROM_GAME"]) {*out = EGameTag_CANT_BE_REMOVED_FROM_GAME;}
  else if ([rawValue isEqualToString:@"CANT_BE_READIED"]) {*out = EGameTag_CANT_BE_READIED;}
  else if ([rawValue isEqualToString:@"CANT_BE_EXHAUSTED"]) {*out = EGameTag_CANT_BE_EXHAUSTED;}
  else if ([rawValue isEqualToString:@"CANT_BE_ATTACKED"]) {*out = EGameTag_CANT_BE_ATTACKED;}
  else if ([rawValue isEqualToString:@"CANT_BE_TARGETED"]) {*out = EGameTag_CANT_BE_TARGETED;}
  else if ([rawValue isEqualToString:@"CANT_BE_DESTROYED"]) {*out = EGameTag_CANT_BE_DESTROYED;}
  else if ([rawValue isEqualToString:@"CANT_BE_SUMMONING_SICK"]) {*out = EGameTag_CANT_BE_SUMMONING_SICK;}
  else if ([rawValue isEqualToString:@"FROZEN"]) {*out = EGameTag_FROZEN;}
  else if ([rawValue isEqualToString:@"JUST_PLAYED"]) {*out = EGameTag_JUST_PLAYED;}
  else if ([rawValue isEqualToString:@"LINKEDCARD"]) {*out = EGameTag_LINKEDCARD;}
  else if ([rawValue isEqualToString:@"ZONE_POSITION"]) {*out = EGameTag_ZONE_POSITION;}
  else if ([rawValue isEqualToString:@"CANT_BE_FROZEN"]) {*out = EGameTag_CANT_BE_FROZEN;}
  else if ([rawValue isEqualToString:@"COMBO_ACTIVE"]) {*out = EGameTag_COMBO_ACTIVE;}
  else if ([rawValue isEqualToString:@"CARD_TARGET"]) {*out = EGameTag_CARD_TARGET;}
  else if ([rawValue isEqualToString:@"NUM_CARDS_PLAYED_THIS_TURN"]) {*out = EGameTag_NUM_CARDS_PLAYED_THIS_TURN;}
  else if ([rawValue isEqualToString:@"CANT_BE_TARGETED_BY_OPPONENTS"]) {*out = EGameTag_CANT_BE_TARGETED_BY_OPPONENTS;}
  else if ([rawValue isEqualToString:@"NUM_TURNS_IN_PLAY"]) {*out = EGameTag_NUM_TURNS_IN_PLAY;}
  else if ([rawValue isEqualToString:@"NUM_TURNS_LEFT"]) {*out = EGameTag_NUM_TURNS_LEFT;}
  else if ([rawValue isEqualToString:@"OUTGOING_DAMAGE_CAP"]) {*out = EGameTag_OUTGOING_DAMAGE_CAP;}
  else if ([rawValue isEqualToString:@"OUTGOING_DAMAGE_ADJUSTMENT"]) {*out = EGameTag_OUTGOING_DAMAGE_ADJUSTMENT;}
  else if ([rawValue isEqualToString:@"OUTGOING_DAMAGE_MULTIPLIER"]) {*out = EGameTag_OUTGOING_DAMAGE_MULTIPLIER;}
  else if ([rawValue isEqualToString:@"OUTGOING_HEALING_CAP"]) {*out = EGameTag_OUTGOING_HEALING_CAP;}
  else if ([rawValue isEqualToString:@"OUTGOING_HEALING_ADJUSTMENT"]) {*out = EGameTag_OUTGOING_HEALING_ADJUSTMENT;}
  else if ([rawValue isEqualToString:@"OUTGOING_HEALING_MULTIPLIER"]) {*out = EGameTag_OUTGOING_HEALING_MULTIPLIER;}
  else if ([rawValue isEqualToString:@"INCOMING_ABILITY_DAMAGE_ADJUSTMENT"]) {*out = EGameTag_INCOMING_ABILITY_DAMAGE_ADJUSTMENT;}
  else if ([rawValue isEqualToString:@"INCOMING_COMBAT_DAMAGE_ADJUSTMENT"]) {*out = EGameTag_INCOMING_COMBAT_DAMAGE_ADJUSTMENT;}
  else if ([rawValue isEqualToString:@"OUTGOING_ABILITY_DAMAGE_ADJUSTMENT"]) {*out = EGameTag_OUTGOING_ABILITY_DAMAGE_ADJUSTMENT;}
  else if ([rawValue isEqualToString:@"OUTGOING_COMBAT_DAMAGE_ADJUSTMENT"]) {*out = EGameTag_OUTGOING_COMBAT_DAMAGE_ADJUSTMENT;}
  else if ([rawValue isEqualToString:@"OUTGOING_ABILITY_DAMAGE_MULTIPLIER"]) {*out = EGameTag_OUTGOING_ABILITY_DAMAGE_MULTIPLIER;}
  else if ([rawValue isEqualToString:@"OUTGOING_ABILITY_DAMAGE_CAP"]) {*out = EGameTag_OUTGOING_ABILITY_DAMAGE_CAP;}
  else if ([rawValue isEqualToString:@"INCOMING_ABILITY_DAMAGE_MULTIPLIER"]) {*out = EGameTag_INCOMING_ABILITY_DAMAGE_MULTIPLIER;}
  else if ([rawValue isEqualToString:@"INCOMING_ABILITY_DAMAGE_CAP"]) {*out = EGameTag_INCOMING_ABILITY_DAMAGE_CAP;}
  else if ([rawValue isEqualToString:@"OUTGOING_COMBAT_DAMAGE_MULTIPLIER"]) {*out = EGameTag_OUTGOING_COMBAT_DAMAGE_MULTIPLIER;}
  else if ([rawValue isEqualToString:@"OUTGOING_COMBAT_DAMAGE_CAP"]) {*out = EGameTag_OUTGOING_COMBAT_DAMAGE_CAP;}
  else if ([rawValue isEqualToString:@"INCOMING_COMBAT_DAMAGE_MULTIPLIER"]) {*out = EGameTag_INCOMING_COMBAT_DAMAGE_MULTIPLIER;}
  else if ([rawValue isEqualToString:@"INCOMING_COMBAT_DAMAGE_CAP"]) {*out = EGameTag_INCOMING_COMBAT_DAMAGE_CAP;}
  else if ([rawValue isEqualToString:@"CURRENT_SPELLPOWER"]) {*out = EGameTag_CURRENT_SPELLPOWER;}
  else if ([rawValue isEqualToString:@"ARMOR"]) {*out = EGameTag_ARMOR;}
  else if ([rawValue isEqualToString:@"MORPH"]) {*out = EGameTag_MORPH;}
  else if ([rawValue isEqualToString:@"IS_MORPHED"]) {*out = EGameTag_IS_MORPHED;}
  else if ([rawValue isEqualToString:@"TEMP_RESOURCES"]) {*out = EGameTag_TEMP_RESOURCES;}
  else if ([rawValue isEqualToString:@"OVERLOAD_OWED"]) {*out = EGameTag_OVERLOAD_OWED;}
  else if ([rawValue isEqualToString:@"NUM_ATTACKS_THIS_TURN"]) {*out = EGameTag_NUM_ATTACKS_THIS_TURN;}
  else if ([rawValue isEqualToString:@"NEXT_ALLY_BUFF"]) {*out = EGameTag_NEXT_ALLY_BUFF;}
  else if ([rawValue isEqualToString:@"MAGNET"]) {*out = EGameTag_MAGNET;}
  else if ([rawValue isEqualToString:@"FIRST_CARD_PLAYED_THIS_TURN"]) {*out = EGameTag_FIRST_CARD_PLAYED_THIS_TURN;}
  else if ([rawValue isEqualToString:@"MULLIGAN_STATE"]) {*out = EGameTag_MULLIGAN_STATE;}
  else if ([rawValue isEqualToString:@"TAUNT_READY"]) {*out = EGameTag_TAUNT_READY;}
  else if ([rawValue isEqualToString:@"STEALTH_READY"]) {*out = EGameTag_STEALTH_READY;}
  else if ([rawValue isEqualToString:@"CHARGE_READY"]) {*out = EGameTag_CHARGE_READY;}
  else if ([rawValue isEqualToString:@"CANT_BE_TARGETED_BY_ABILITIES"]) {*out = EGameTag_CANT_BE_TARGETED_BY_ABILITIES;}
  else if ([rawValue isEqualToString:@"SHOULDEXITCOMBAT"]) {*out = EGameTag_SHOULDEXITCOMBAT;}
  else if ([rawValue isEqualToString:@"CREATOR"]) {*out = EGameTag_CREATOR;}
  else if ([rawValue isEqualToString:@"CANT_BE_DISPELLED"]) {*out = EGameTag_CANT_BE_DISPELLED;}
  else if ([rawValue isEqualToString:@"PARENT_CARD"]) {*out = EGameTag_PARENT_CARD;}
  else if ([rawValue isEqualToString:@"NUM_MINIONS_PLAYED_THIS_TURN"]) {*out = EGameTag_NUM_MINIONS_PLAYED_THIS_TURN;}
  else if ([rawValue isEqualToString:@"PREDAMAGE"]) {*out = EGameTag_PREDAMAGE;}
  else if ([rawValue isEqualToString:@"ENCHANTMENT_BIRTH_VISUAL"]) {*out = EGameTag_ENCHANTMENT_BIRTH_VISUAL;}
  else if ([rawValue isEqualToString:@"ENCHANTMENT_IDLE_VISUAL"]) {*out = EGameTag_ENCHANTMENT_IDLE_VISUAL;}
  else if ([rawValue isEqualToString:@"CANT_BE_TARGETED_BY_HERO_POWERS"]) {*out = EGameTag_CANT_BE_TARGETED_BY_HERO_POWERS;}
  else if ([rawValue isEqualToString:@"HEALTH_MINIMUM"]) {*out = EGameTag_HEALTH_MINIMUM;}
  else if ([rawValue isEqualToString:@"TAG_ONE_TURN_EFFECT"]) {*out = EGameTag_TAG_ONE_TURN_EFFECT;}
  else if ([rawValue isEqualToString:@"SILENCE"]) {*out = EGameTag_SILENCE;}
  else if ([rawValue isEqualToString:@"COUNTER"]) {*out = EGameTag_COUNTER;}
  else if ([rawValue isEqualToString:@"HAND_REVEALED"]) {*out = EGameTag_HAND_REVEALED;}
  else if ([rawValue isEqualToString:@"ADJACENT_BUFF"]) {*out = EGameTag_ADJACENT_BUFF;}
  else if ([rawValue isEqualToString:@"FORCED_PLAY"]) {*out = EGameTag_FORCED_PLAY;}
  else if ([rawValue isEqualToString:@"LOW_HEALTH_THRESHOLD"]) {*out = EGameTag_LOW_HEALTH_THRESHOLD;}
  else if ([rawValue isEqualToString:@"IGNORE_DAMAGE_OFF"]) {*out = EGameTag_IGNORE_DAMAGE_OFF;}
  else if ([rawValue isEqualToString:@"SPELLPOWER_DOUBLE"]) {*out = EGameTag_SPELLPOWER_DOUBLE;}
  else if ([rawValue isEqualToString:@"HEALING_DOUBLE"]) {*out = EGameTag_HEALING_DOUBLE;}
  else if ([rawValue isEqualToString:@"NUM_OPTIONS_PLAYED_THIS_TURN"]) {*out = EGameTag_NUM_OPTIONS_PLAYED_THIS_TURN;}
  else if ([rawValue isEqualToString:@"NUM_OPTIONS"]) {*out = EGameTag_NUM_OPTIONS;}
  else if ([rawValue isEqualToString:@"TO_BE_DESTROYED"]) {*out = EGameTag_TO_BE_DESTROYED;}
  else if ([rawValue isEqualToString:@"AURA"]) {*out = EGameTag_AURA;}
  else if ([rawValue isEqualToString:@"POISONOUS"]) {*out = EGameTag_POISONOUS;}
  else if ([rawValue isEqualToString:@"HERO_POWER_DOUBLE"]) {*out = EGameTag_HERO_POWER_DOUBLE;}
  else if ([rawValue isEqualToString:@"AI_MUST_PLAY"]) {*out = EGameTag_AI_MUST_PLAY;}
  else if ([rawValue isEqualToString:@"NUM_MINIONS_PLAYER_KILLED_THIS_TURN"]) {*out = EGameTag_NUM_MINIONS_PLAYER_KILLED_THIS_TURN;}
  else if ([rawValue isEqualToString:@"NUM_MINIONS_KILLED_THIS_TURN"]) {*out = EGameTag_NUM_MINIONS_KILLED_THIS_TURN;}
  else if ([rawValue isEqualToString:@"AFFECTED_BY_SPELL_POWER"]) {*out = EGameTag_AFFECTED_BY_SPELL_POWER;}
  else if ([rawValue isEqualToString:@"EXTRA_DEATHRATTLES"]) {*out = EGameTag_EXTRA_DEATHRATTLES;}
  else if ([rawValue isEqualToString:@"START_WITH_1_HEALTH"]) {*out = EGameTag_START_WITH_1_HEALTH;}
  else if ([rawValue isEqualToString:@"IMMUNE_WHILE_ATTACKING"]) {*out = EGameTag_IMMUNE_WHILE_ATTACKING;}
  else if ([rawValue isEqualToString:@"MULTIPLY_HERO_DAMAGE"]) {*out = EGameTag_MULTIPLY_HERO_DAMAGE;}
  else if ([rawValue isEqualToString:@"MULTIPLY_BUFF_VALUE"]) {*out = EGameTag_MULTIPLY_BUFF_VALUE;}
  else if ([rawValue isEqualToString:@"CUSTOM_KEYWORD_EFFECT"]) {*out = EGameTag_CUSTOM_KEYWORD_EFFECT;}
  else if ([rawValue isEqualToString:@"TOPDECK"]) {*out = EGameTag_TOPDECK;}
  else if ([rawValue isEqualToString:@"CANT_BE_TARGETED_BY_BATTLECRIES"]) {*out = EGameTag_CANT_BE_TARGETED_BY_BATTLECRIES;}
  else if ([rawValue isEqualToString:@"SHOWN_HERO_POWER"]) {*out = EGameTag_SHOWN_HERO_POWER;}
  else if ([rawValue isEqualToString:@"DEATHRATTLE_RETURN_ZONE"]) {*out = EGameTag_DEATHRATTLE_RETURN_ZONE;}
  else if ([rawValue isEqualToString:@"STEADY_SHOT_CAN_TARGET"]) {*out = EGameTag_STEADY_SHOT_CAN_TARGET;}
  else if ([rawValue isEqualToString:@"DISPLAYED_CREATOR"]) {*out = EGameTag_DISPLAYED_CREATOR;}
  else if ([rawValue isEqualToString:@"POWERED_UP"]) {*out = EGameTag_POWERED_UP;}
  else if ([rawValue isEqualToString:@"SPARE_PART"]) {*out = EGameTag_SPARE_PART;}
  else if ([rawValue isEqualToString:@"FORGETFUL"]) {*out = EGameTag_FORGETFUL;}
  else if ([rawValue isEqualToString:@"CAN_SUMMON_MAXPLUSONE_MINION"]) {*out = EGameTag_CAN_SUMMON_MAXPLUSONE_MINION;}
  else if ([rawValue isEqualToString:@"OBFUSCATED"]) {*out = EGameTag_OBFUSCATED;}
  else if ([rawValue isEqualToString:@"BURNING"]) {*out = EGameTag_BURNING;}
  else if ([rawValue isEqualToString:@"OVERLOAD_LOCKED"]) {*out = EGameTag_OVERLOAD_LOCKED;}
  else if ([rawValue isEqualToString:@"NUM_TIMES_HERO_POWER_USED_THIS_GAME"]) {*out = EGameTag_NUM_TIMES_HERO_POWER_USED_THIS_GAME;}
  else if ([rawValue isEqualToString:@"CURRENT_HEROPOWER_DAMAGE_BONUS"]) {*out = EGameTag_CURRENT_HEROPOWER_DAMAGE_BONUS;}
  else if ([rawValue isEqualToString:@"HEROPOWER_DAMAGE"]) {*out = EGameTag_HEROPOWER_DAMAGE;}
  else if ([rawValue isEqualToString:@"LAST_CARD_PLAYED"]) {*out = EGameTag_LAST_CARD_PLAYED;}
  else if ([rawValue isEqualToString:@"NUM_FRIENDLY_MINIONS_THAT_DIED_THIS_TURN"]) {*out = EGameTag_NUM_FRIENDLY_MINIONS_THAT_DIED_THIS_TURN;}
  else if ([rawValue isEqualToString:@"NUM_CARDS_DRAWN_THIS_TURN"]) {*out = EGameTag_NUM_CARDS_DRAWN_THIS_TURN;}
  else if ([rawValue isEqualToString:@"AI_ONE_SHOT_KILL"]) {*out = EGameTag_AI_ONE_SHOT_KILL;}
  else if ([rawValue isEqualToString:@"EVIL_GLOW"]) {*out = EGameTag_EVIL_GLOW;}
  else if ([rawValue isEqualToString:@"HIDE_COST"]) {*out = EGameTag_HIDE_COST;}
  else if ([rawValue isEqualToString:@"INSPIRE"]) {*out = EGameTag_INSPIRE;}
  else if ([rawValue isEqualToString:@"RECEIVES_DOUBLE_SPELLDAMAGE_BONUS"]) {*out = EGameTag_RECEIVES_DOUBLE_SPELLDAMAGE_BONUS;}
  else if ([rawValue isEqualToString:@"HEROPOWER_ADDITIONAL_ACTIVATIONS"]) {*out = EGameTag_HEROPOWER_ADDITIONAL_ACTIVATIONS;}
  else if ([rawValue isEqualToString:@"HEROPOWER_ACTIVATIONS_THIS_TURN"]) {*out = EGameTag_HEROPOWER_ACTIVATIONS_THIS_TURN;}
  else if ([rawValue isEqualToString:@"REVEALED"]) {*out = EGameTag_REVEALED;}
  else if ([rawValue isEqualToString:@"NUM_FRIENDLY_MINIONS_THAT_DIED_THIS_GAME"]) {*out = EGameTag_NUM_FRIENDLY_MINIONS_THAT_DIED_THIS_GAME;}
  else if ([rawValue isEqualToString:@"CANNOT_ATTACK_HEROES"]) {*out = EGameTag_CANNOT_ATTACK_HEROES;}
  else if ([rawValue isEqualToString:@"LOCK_AND_LOAD"]) {*out = EGameTag_LOCK_AND_LOAD;}
  else if ([rawValue isEqualToString:@"TREASURE"]) {*out = EGameTag_TREASURE;}
  else if ([rawValue isEqualToString:@"SHADOWFORM"]) {*out = EGameTag_SHADOWFORM;}
  else if ([rawValue isEqualToString:@"NUM_FRIENDLY_MINIONS_THAT_ATTACKED_THIS_TURN"]) {*out = EGameTag_NUM_FRIENDLY_MINIONS_THAT_ATTACKED_THIS_TURN;}
  else if ([rawValue isEqualToString:@"NUM_RESOURCES_SPENT_THIS_GAME"]) {*out = EGameTag_NUM_RESOURCES_SPENT_THIS_GAME;}
  else if ([rawValue isEqualToString:@"CHOOSE_BOTH"]) {*out = EGameTag_CHOOSE_BOTH;}
  else if ([rawValue isEqualToString:@"ELECTRIC_CHARGE_LEVEL"]) {*out = EGameTag_ELECTRIC_CHARGE_LEVEL;}
  else if ([rawValue isEqualToString:@"HEAVILY_ARMORED"]) {*out = EGameTag_HEAVILY_ARMORED;}
  else if ([rawValue isEqualToString:@"DONT_SHOW_IMMUNE"]) {*out = EGameTag_DONT_SHOW_IMMUNE;}
  else if ([rawValue isEqualToString:@"Collectible"]) {*out = EGameTag_Collectible;}
  else if ([rawValue isEqualToString:@"InvisibleDeathrattle"]) {*out = EGameTag_InvisibleDeathrattle;}
  else if ([rawValue isEqualToString:@"OneTurnEffect"]) {*out = EGameTag_OneTurnEffect;}
  else if ([rawValue isEqualToString:@"ImmuneToSpellpower"]) {*out = EGameTag_ImmuneToSpellpower;}
  else if ([rawValue isEqualToString:@"AttackVisualType"]) {*out = EGameTag_AttackVisualType;}
  else if ([rawValue isEqualToString:@"DevState"]) {*out = EGameTag_DevState;}
  else if ([rawValue isEqualToString:@"GrantCharge"]) {*out = EGameTag_GrantCharge;}
  else if ([rawValue isEqualToString:@"HealTarget"]) {*out = EGameTag_HealTarget;}
  else if ([rawValue isEqualToString:@"CardTextInPlay"]) {*out = EGameTag_CardTextInPlay;}
  else if ([rawValue isEqualToString:@"TARGETING_ARROW_TEXT"]) {*out = EGameTag_TARGETING_ARROW_TEXT;}
  else if ([rawValue isEqualToString:@"ARTISTNAME"]) {*out = EGameTag_ARTISTNAME;}
  else if ([rawValue isEqualToString:@"FLAVORTEXT"]) {*out = EGameTag_FLAVORTEXT;}
  else if ([rawValue isEqualToString:@"HOW_TO_EARN"]) {*out = EGameTag_HOW_TO_EARN;}
  else if ([rawValue isEqualToString:@"HOW_TO_EARN_GOLDEN"]) {*out = EGameTag_HOW_TO_EARN_GOLDEN;}
  else if ([rawValue isEqualToString:@"DEATH_RATTLE"]) {*out = EGameTag_DEATH_RATTLE;}
  else if ([rawValue isEqualToString:@"DEATHRATTLE_SENDS_BACK_TO_DECK"]) {*out = EGameTag_DEATHRATTLE_SENDS_BACK_TO_DECK;}
  else if ([rawValue isEqualToString:@"RECALL"]) {*out = EGameTag_RECALL;}
  else if ([rawValue isEqualToString:@"RECALL_OWED"]) {*out = EGameTag_RECALL_OWED;}
  else if ([rawValue isEqualToString:@"TAG_HERO_POWER_DOUBLE"]) {*out = EGameTag_TAG_HERO_POWER_DOUBLE;}
  else if ([rawValue isEqualToString:@"TAG_AI_MUST_PLAY"]) {*out = EGameTag_TAG_AI_MUST_PLAY;}
  else if ([rawValue isEqualToString:@"OVERKILL"]) {*out = EGameTag_OVERKILL;}
  else if ([rawValue isEqualToString:@"DIVINE_SHIELD_READY"]) {*out = EGameTag_DIVINE_SHIELD_READY;}
  else if ([rawValue isEqualToString:@"EQUIPPED_WEAPON"]) {*out = EGameTag_EQUIPPED_WEAPON;}
  else {
    *out = (EGameTag) 0;
    return NO;
  }
  return YES;
}

+ (BOOL)exists:(NSInteger)number
{
  if (number == EGameTag_IGNORE_DAMAGE) {return YES;}
  else if (number == EGameTag_TAG_SCRIPT_DATA_NUM_1) {return YES;}
  else if (number == EGameTag_TAG_SCRIPT_DATA_NUM_2) {return YES;}
  else if (number == EGameTag_TAG_SCRIPT_DATA_ENT_1) {return YES;}
  else if (number == EGameTag_TAG_SCRIPT_DATA_ENT_2) {return YES;}
  else if (number == EGameTag_MISSION_EVENT) {return YES;}
  else if (number == EGameTag_TIMEOUT) {return YES;}
  else if (number == EGameTag_TURN_START) {return YES;}
  else if (number == EGameTag_TURN_TIMER_SLUSH) {return YES;}
  else if (number == EGameTag_PREMIUM) {return YES;}
  else if (number == EGameTag_GOLD_REWARD_STATE) {return YES;}
  else if (number == EGameTag_PLAYSTATE) {return YES;}
  else if (number == EGameTag_LAST_AFFECTED_BY) {return YES;}
  else if (number == EGameTag_STEP) {return YES;}
  else if (number == EGameTag_TURN) {return YES;}
  else if (number == EGameTag_FATIGUE) {return YES;}
  else if (number == EGameTag_CURRENT_PLAYER) {return YES;}
  else if (number == EGameTag_FIRST_PLAYER) {return YES;}
  else if (number == EGameTag_RESOURCES_USED) {return YES;}
  else if (number == EGameTag_RESOURCES) {return YES;}
  else if (number == EGameTag_HERO_ENTITY) {return YES;}
  else if (number == EGameTag_MAXHANDSIZE) {return YES;}
  else if (number == EGameTag_STARTHANDSIZE) {return YES;}
  else if (number == EGameTag_PLAYER_ID) {return YES;}
  else if (number == EGameTag_TEAM_ID) {return YES;}
  else if (number == EGameTag_TRIGGER_VISUAL) {return YES;}
  else if (number == EGameTag_RECENTLY_ARRIVED) {return YES;}
  else if (number == EGameTag_PROTECTED) {return YES;}
  else if (number == EGameTag_PROTECTING) {return YES;}
  else if (number == EGameTag_DEFENDING) {return YES;}
  else if (number == EGameTag_PROPOSED_DEFENDER) {return YES;}
  else if (number == EGameTag_ATTACKING) {return YES;}
  else if (number == EGameTag_PROPOSED_ATTACKER) {return YES;}
  else if (number == EGameTag_ATTACHED) {return YES;}
  else if (number == EGameTag_EXHAUSTED) {return YES;}
  else if (number == EGameTag_DAMAGE) {return YES;}
  else if (number == EGameTag_HEALTH) {return YES;}
  else if (number == EGameTag_ATK) {return YES;}
  else if (number == EGameTag_COST) {return YES;}
  else if (number == EGameTag_ZONE) {return YES;}
  else if (number == EGameTag_CONTROLLER) {return YES;}
  else if (number == EGameTag_OWNER) {return YES;}
  else if (number == EGameTag_DEFINITION) {return YES;}
  else if (number == EGameTag_ENTITY_ID) {return YES;}
  else if (number == EGameTag_HISTORY_PROXY) {return YES;}
  else if (number == EGameTag_COPY_DEATHRATTLE) {return YES;}
  else if (number == EGameTag_COPY_DEATHRATTLE_INDEX) {return YES;}
  else if (number == EGameTag_ELITE) {return YES;}
  else if (number == EGameTag_MAXRESOURCES) {return YES;}
  else if (number == EGameTag_CARD_SET) {return YES;}
  else if (number == EGameTag_CARDTEXT_INHAND) {return YES;}
  else if (number == EGameTag_CARDNAME) {return YES;}
  else if (number == EGameTag_CARD_ID) {return YES;}
  else if (number == EGameTag_DURABILITY) {return YES;}
  else if (number == EGameTag_SILENCED) {return YES;}
  else if (number == EGameTag_WINDFURY) {return YES;}
  else if (number == EGameTag_TAUNT) {return YES;}
  else if (number == EGameTag_STEALTH) {return YES;}
  else if (number == EGameTag_SPELLPOWER) {return YES;}
  else if (number == EGameTag_DIVINE_SHIELD) {return YES;}
  else if (number == EGameTag_CHARGE) {return YES;}
  else if (number == EGameTag_NEXT_STEP) {return YES;}
  else if (number == EGameTag_CLASS) {return YES;}
  else if (number == EGameTag_CARDRACE) {return YES;}
  else if (number == EGameTag_FACTION) {return YES;}
  else if (number == EGameTag_CARDTYPE) {return YES;}
  else if (number == EGameTag_RARITY) {return YES;}
  else if (number == EGameTag_STATE) {return YES;}
  else if (number == EGameTag_SUMMONED) {return YES;}
  else if (number == EGameTag_FREEZE) {return YES;}
  else if (number == EGameTag_ENRAGED) {return YES;}
  else if (number == EGameTag_OVERLOAD) {return YES;}
  else if (number == EGameTag_LOYALTY) {return YES;}
  else if (number == EGameTag_DEATHRATTLE) {return YES;}
  else if (number == EGameTag_BATTLECRY) {return YES;}
  else if (number == EGameTag_SECRET) {return YES;}
  else if (number == EGameTag_COMBO) {return YES;}
  else if (number == EGameTag_CANT_HEAL) {return YES;}
  else if (number == EGameTag_CANT_DAMAGE) {return YES;}
  else if (number == EGameTag_CANT_SET_ASIDE) {return YES;}
  else if (number == EGameTag_CANT_REMOVE_FROM_GAME) {return YES;}
  else if (number == EGameTag_CANT_READY) {return YES;}
  else if (number == EGameTag_CANT_EXHAUST) {return YES;}
  else if (number == EGameTag_CANT_ATTACK) {return YES;}
  else if (number == EGameTag_CANT_TARGET) {return YES;}
  else if (number == EGameTag_CANT_DESTROY) {return YES;}
  else if (number == EGameTag_CANT_DISCARD) {return YES;}
  else if (number == EGameTag_CANT_PLAY) {return YES;}
  else if (number == EGameTag_CANT_DRAW) {return YES;}
  else if (number == EGameTag_INCOMING_HEALING_MULTIPLIER) {return YES;}
  else if (number == EGameTag_INCOMING_HEALING_ADJUSTMENT) {return YES;}
  else if (number == EGameTag_INCOMING_HEALING_CAP) {return YES;}
  else if (number == EGameTag_INCOMING_DAMAGE_MULTIPLIER) {return YES;}
  else if (number == EGameTag_INCOMING_DAMAGE_ADJUSTMENT) {return YES;}
  else if (number == EGameTag_INCOMING_DAMAGE_CAP) {return YES;}
  else if (number == EGameTag_CANT_BE_HEALED) {return YES;}
  else if (number == EGameTag_CANT_BE_DAMAGED) {return YES;}
  else if (number == EGameTag_CANT_BE_SET_ASIDE) {return YES;}
  else if (number == EGameTag_CANT_BE_REMOVED_FROM_GAME) {return YES;}
  else if (number == EGameTag_CANT_BE_READIED) {return YES;}
  else if (number == EGameTag_CANT_BE_EXHAUSTED) {return YES;}
  else if (number == EGameTag_CANT_BE_ATTACKED) {return YES;}
  else if (number == EGameTag_CANT_BE_TARGETED) {return YES;}
  else if (number == EGameTag_CANT_BE_DESTROYED) {return YES;}
  else if (number == EGameTag_CANT_BE_SUMMONING_SICK) {return YES;}
  else if (number == EGameTag_FROZEN) {return YES;}
  else if (number == EGameTag_JUST_PLAYED) {return YES;}
  else if (number == EGameTag_LINKEDCARD) {return YES;}
  else if (number == EGameTag_ZONE_POSITION) {return YES;}
  else if (number == EGameTag_CANT_BE_FROZEN) {return YES;}
  else if (number == EGameTag_COMBO_ACTIVE) {return YES;}
  else if (number == EGameTag_CARD_TARGET) {return YES;}
  else if (number == EGameTag_NUM_CARDS_PLAYED_THIS_TURN) {return YES;}
  else if (number == EGameTag_CANT_BE_TARGETED_BY_OPPONENTS) {return YES;}
  else if (number == EGameTag_NUM_TURNS_IN_PLAY) {return YES;}
  else if (number == EGameTag_NUM_TURNS_LEFT) {return YES;}
  else if (number == EGameTag_OUTGOING_DAMAGE_CAP) {return YES;}
  else if (number == EGameTag_OUTGOING_DAMAGE_ADJUSTMENT) {return YES;}
  else if (number == EGameTag_OUTGOING_DAMAGE_MULTIPLIER) {return YES;}
  else if (number == EGameTag_OUTGOING_HEALING_CAP) {return YES;}
  else if (number == EGameTag_OUTGOING_HEALING_ADJUSTMENT) {return YES;}
  else if (number == EGameTag_OUTGOING_HEALING_MULTIPLIER) {return YES;}
  else if (number == EGameTag_INCOMING_ABILITY_DAMAGE_ADJUSTMENT) {return YES;}
  else if (number == EGameTag_INCOMING_COMBAT_DAMAGE_ADJUSTMENT) {return YES;}
  else if (number == EGameTag_OUTGOING_ABILITY_DAMAGE_ADJUSTMENT) {return YES;}
  else if (number == EGameTag_OUTGOING_COMBAT_DAMAGE_ADJUSTMENT) {return YES;}
  else if (number == EGameTag_OUTGOING_ABILITY_DAMAGE_MULTIPLIER) {return YES;}
  else if (number == EGameTag_OUTGOING_ABILITY_DAMAGE_CAP) {return YES;}
  else if (number == EGameTag_INCOMING_ABILITY_DAMAGE_MULTIPLIER) {return YES;}
  else if (number == EGameTag_INCOMING_ABILITY_DAMAGE_CAP) {return YES;}
  else if (number == EGameTag_OUTGOING_COMBAT_DAMAGE_MULTIPLIER) {return YES;}
  else if (number == EGameTag_OUTGOING_COMBAT_DAMAGE_CAP) {return YES;}
  else if (number == EGameTag_INCOMING_COMBAT_DAMAGE_MULTIPLIER) {return YES;}
  else if (number == EGameTag_INCOMING_COMBAT_DAMAGE_CAP) {return YES;}
  else if (number == EGameTag_CURRENT_SPELLPOWER) {return YES;}
  else if (number == EGameTag_ARMOR) {return YES;}
  else if (number == EGameTag_MORPH) {return YES;}
  else if (number == EGameTag_IS_MORPHED) {return YES;}
  else if (number == EGameTag_TEMP_RESOURCES) {return YES;}
  else if (number == EGameTag_OVERLOAD_OWED) {return YES;}
  else if (number == EGameTag_NUM_ATTACKS_THIS_TURN) {return YES;}
  else if (number == EGameTag_NEXT_ALLY_BUFF) {return YES;}
  else if (number == EGameTag_MAGNET) {return YES;}
  else if (number == EGameTag_FIRST_CARD_PLAYED_THIS_TURN) {return YES;}
  else if (number == EGameTag_MULLIGAN_STATE) {return YES;}
  else if (number == EGameTag_TAUNT_READY) {return YES;}
  else if (number == EGameTag_STEALTH_READY) {return YES;}
  else if (number == EGameTag_CHARGE_READY) {return YES;}
  else if (number == EGameTag_CANT_BE_TARGETED_BY_ABILITIES) {return YES;}
  else if (number == EGameTag_SHOULDEXITCOMBAT) {return YES;}
  else if (number == EGameTag_CREATOR) {return YES;}
  else if (number == EGameTag_CANT_BE_DISPELLED) {return YES;}
  else if (number == EGameTag_PARENT_CARD) {return YES;}
  else if (number == EGameTag_NUM_MINIONS_PLAYED_THIS_TURN) {return YES;}
  else if (number == EGameTag_PREDAMAGE) {return YES;}
  else if (number == EGameTag_ENCHANTMENT_BIRTH_VISUAL) {return YES;}
  else if (number == EGameTag_ENCHANTMENT_IDLE_VISUAL) {return YES;}
  else if (number == EGameTag_CANT_BE_TARGETED_BY_HERO_POWERS) {return YES;}
  else if (number == EGameTag_HEALTH_MINIMUM) {return YES;}
  else if (number == EGameTag_TAG_ONE_TURN_EFFECT) {return YES;}
  else if (number == EGameTag_SILENCE) {return YES;}
  else if (number == EGameTag_COUNTER) {return YES;}
  else if (number == EGameTag_HAND_REVEALED) {return YES;}
  else if (number == EGameTag_ADJACENT_BUFF) {return YES;}
  else if (number == EGameTag_FORCED_PLAY) {return YES;}
  else if (number == EGameTag_LOW_HEALTH_THRESHOLD) {return YES;}
  else if (number == EGameTag_IGNORE_DAMAGE_OFF) {return YES;}
  else if (number == EGameTag_SPELLPOWER_DOUBLE) {return YES;}
  else if (number == EGameTag_HEALING_DOUBLE) {return YES;}
  else if (number == EGameTag_NUM_OPTIONS_PLAYED_THIS_TURN) {return YES;}
  else if (number == EGameTag_NUM_OPTIONS) {return YES;}
  else if (number == EGameTag_TO_BE_DESTROYED) {return YES;}
  else if (number == EGameTag_AURA) {return YES;}
  else if (number == EGameTag_POISONOUS) {return YES;}
  else if (number == EGameTag_HERO_POWER_DOUBLE) {return YES;}
  else if (number == EGameTag_AI_MUST_PLAY) {return YES;}
  else if (number == EGameTag_NUM_MINIONS_PLAYER_KILLED_THIS_TURN) {return YES;}
  else if (number == EGameTag_NUM_MINIONS_KILLED_THIS_TURN) {return YES;}
  else if (number == EGameTag_AFFECTED_BY_SPELL_POWER) {return YES;}
  else if (number == EGameTag_EXTRA_DEATHRATTLES) {return YES;}
  else if (number == EGameTag_START_WITH_1_HEALTH) {return YES;}
  else if (number == EGameTag_IMMUNE_WHILE_ATTACKING) {return YES;}
  else if (number == EGameTag_MULTIPLY_HERO_DAMAGE) {return YES;}
  else if (number == EGameTag_MULTIPLY_BUFF_VALUE) {return YES;}
  else if (number == EGameTag_CUSTOM_KEYWORD_EFFECT) {return YES;}
  else if (number == EGameTag_TOPDECK) {return YES;}
  else if (number == EGameTag_CANT_BE_TARGETED_BY_BATTLECRIES) {return YES;}
  else if (number == EGameTag_SHOWN_HERO_POWER) {return YES;}
  else if (number == EGameTag_DEATHRATTLE_RETURN_ZONE) {return YES;}
  else if (number == EGameTag_STEADY_SHOT_CAN_TARGET) {return YES;}
  else if (number == EGameTag_DISPLAYED_CREATOR) {return YES;}
  else if (number == EGameTag_POWERED_UP) {return YES;}
  else if (number == EGameTag_SPARE_PART) {return YES;}
  else if (number == EGameTag_FORGETFUL) {return YES;}
  else if (number == EGameTag_CAN_SUMMON_MAXPLUSONE_MINION) {return YES;}
  else if (number == EGameTag_OBFUSCATED) {return YES;}
  else if (number == EGameTag_BURNING) {return YES;}
  else if (number == EGameTag_OVERLOAD_LOCKED) {return YES;}
  else if (number == EGameTag_NUM_TIMES_HERO_POWER_USED_THIS_GAME) {return YES;}
  else if (number == EGameTag_CURRENT_HEROPOWER_DAMAGE_BONUS) {return YES;}
  else if (number == EGameTag_HEROPOWER_DAMAGE) {return YES;}
  else if (number == EGameTag_LAST_CARD_PLAYED) {return YES;}
  else if (number == EGameTag_NUM_FRIENDLY_MINIONS_THAT_DIED_THIS_TURN) {return YES;}
  else if (number == EGameTag_NUM_CARDS_DRAWN_THIS_TURN) {return YES;}
  else if (number == EGameTag_AI_ONE_SHOT_KILL) {return YES;}
  else if (number == EGameTag_EVIL_GLOW) {return YES;}
  else if (number == EGameTag_HIDE_COST) {return YES;}
  else if (number == EGameTag_INSPIRE) {return YES;}
  else if (number == EGameTag_RECEIVES_DOUBLE_SPELLDAMAGE_BONUS) {return YES;}
  else if (number == EGameTag_HEROPOWER_ADDITIONAL_ACTIVATIONS) {return YES;}
  else if (number == EGameTag_HEROPOWER_ACTIVATIONS_THIS_TURN) {return YES;}
  else if (number == EGameTag_REVEALED) {return YES;}
  else if (number == EGameTag_NUM_FRIENDLY_MINIONS_THAT_DIED_THIS_GAME) {return YES;}
  else if (number == EGameTag_CANNOT_ATTACK_HEROES) {return YES;}
  else if (number == EGameTag_LOCK_AND_LOAD) {return YES;}
  else if (number == EGameTag_TREASURE) {return YES;}
  else if (number == EGameTag_SHADOWFORM) {return YES;}
  else if (number == EGameTag_NUM_FRIENDLY_MINIONS_THAT_ATTACKED_THIS_TURN) {return YES;}
  else if (number == EGameTag_NUM_RESOURCES_SPENT_THIS_GAME) {return YES;}
  else if (number == EGameTag_CHOOSE_BOTH) {return YES;}
  else if (number == EGameTag_ELECTRIC_CHARGE_LEVEL) {return YES;}
  else if (number == EGameTag_HEAVILY_ARMORED) {return YES;}
  else if (number == EGameTag_DONT_SHOW_IMMUNE) {return YES;}
  else if (number == EGameTag_Collectible) {return YES;}
  else if (number == EGameTag_InvisibleDeathrattle) {return YES;}
  else if (number == EGameTag_OneTurnEffect) {return YES;}
  else if (number == EGameTag_ImmuneToSpellpower) {return YES;}
  else if (number == EGameTag_AttackVisualType) {return YES;}
  else if (number == EGameTag_DevState) {return YES;}
  else if (number == EGameTag_GrantCharge) {return YES;}
  else if (number == EGameTag_HealTarget) {return YES;}
  else if (number == EGameTag_CardTextInPlay) {return YES;}
  else if (number == EGameTag_TARGETING_ARROW_TEXT) {return YES;}
  else if (number == EGameTag_ARTISTNAME) {return YES;}
  else if (number == EGameTag_FLAVORTEXT) {return YES;}
  else if (number == EGameTag_HOW_TO_EARN) {return YES;}
  else if (number == EGameTag_HOW_TO_EARN_GOLDEN) {return YES;}
  else if (number == EGameTag_DEATH_RATTLE) {return YES;}
  else if (number == EGameTag_DEATHRATTLE_SENDS_BACK_TO_DECK) {return YES;}
  else if (number == EGameTag_RECALL) {return YES;}
  else if (number == EGameTag_RECALL_OWED) {return YES;}
  else if (number == EGameTag_TAG_HERO_POWER_DOUBLE) {return YES;}
  else if (number == EGameTag_TAG_AI_MUST_PLAY) {return YES;}
  else if (number == EGameTag_OVERKILL) {return YES;}
  else if (number == EGameTag_DIVINE_SHIELD_READY) {return YES;}
  else if (number == EGameTag_EQUIPPED_WEAPON) {return YES;}
  else {return NO;}
}

@end
